import 'dart:io';
import 'package:flutter/services.dart';
import 'package:image/image.dart' as img;
import 'package:url_launcher/url_launcher.dart';

class CyberCrimeReportingService {
  static const String _cyberCrimeEmail = 'cybercrime@cbi.gov.in';
  static const String _cyberCrimeWebsite = 'https://cybercrime.gov.in/';
  static const String _ncrpWebsite = 'https://www.ncrp.gov.in/';

  /// Report fake currency to cyber crime authorities
  static Future<void> reportFakeCurrency({
    required File imageFile,
    required String deviceInfo,
  }) async {
    try {
      // Create a detailed report
      final report = await _generateReport(imageFile, deviceInfo);

      // For now, we'll copy the report to clipboard
      // In a production app, you might want to:
      // 1. Send email using url_launcher
      // 2. Upload to a reporting API
      // 3. Save locally for batch reporting

      await Clipboard.setData(ClipboardData(text: report));
    } catch (e) {
      throw Exception('Failed to generate report: $e');
    }
  }

  /// Generate a detailed report for fake currency
  static Future<String> _generateReport(
    File imageFile,
    String deviceInfo,
  ) async {
    final timestamp = DateTime.now().toIso8601String();
    final fileName = imageFile.path.split('/').last;

    // Get basic image info
    String imageInfo = 'Image analysis failed';
    try {
      final imageBytes = await imageFile.readAsBytes();
      final image = img.decodeImage(imageBytes);
      if (image != null) {
        imageInfo =
            'Image: ${image.width}x${image.height} pixels, Size: ${imageBytes.length} bytes';
      }
    } catch (e) {
      imageInfo = 'Image info unavailable: $e';
    }

    return '''
FAKE CURRENCY DETECTION REPORT
==============================

Detection Time: $timestamp
Device Information: $deviceInfo
Image File: $fileName
$imageInfo

DETECTION RESULT: FAKE CURRENCY DETECTED

This report was generated by the Rupees Currency Detector app.
The AI model has identified this currency note as potentially counterfeit.

For official reporting, please visit:
- Cyber Crime Portal: $_cyberCrimeWebsite
- National Cyber Crime Reporting Portal: $_ncrpWebsite
- Email: $_cyberCrimeEmail

IMPORTANT: Please also report this to your local police station
and the Reserve Bank of India if you believe you have encountered
counterfeit currency.

This report has been copied to your clipboard.
''';
  }

  /// Get the cyber crime website URL
  static String getCyberCrimeWebsite() => _cyberCrimeWebsite;

  /// Get the NCRP website URL
  static String getNcrpWebsite() => _ncrpWebsite;

  /// Get the cyber crime email
  static String getCyberCrimeEmail() => _cyberCrimeEmail;

  /// Generate mailto link for reporting
  static String generateMailtoLink() {
    const subject = 'Fake Currency Detection Report';
    final body =
        '''Dear Cyber Crime Team,

I am reporting a potential counterfeit currency note detected using the Rupees Currency Detector mobile application.

Detection Details:
- Date: ${DateTime.now().toString()}
- Detection Result: FAKE CURRENCY
- App: Rupees Currency Detector

Please find the attached image for your review and investigation.

Thank you for your service in protecting our financial system.

Best regards''';

    return 'mailto:$_cyberCrimeEmail?subject=${Uri.encodeComponent(subject)}&body=${Uri.encodeComponent(body)}';
  }

  /// Launch the cyber crime website
  static Future<bool> launchCyberCrimeWebsite() async {
    final uri = Uri.parse(_cyberCrimeWebsite);
    try {
      return await launchUrl(uri, mode: LaunchMode.externalApplication);
    } catch (e) {
      return false;
    }
  }

  /// Launch the NCRP website
  static Future<bool> launchNcrpWebsite() async {
    final uri = Uri.parse(_ncrpWebsite);
    try {
      return await launchUrl(uri, mode: LaunchMode.externalApplication);
    } catch (e) {
      return false;
    }
  }

  /// Launch email client with pre-filled report
  static Future<bool> launchEmailClient() async {
    final mailtoLink = generateMailtoLink();
    final uri = Uri.parse(mailtoLink);
    try {
      return await launchUrl(uri);
    } catch (e) {
      return false;
    }
  }
}
